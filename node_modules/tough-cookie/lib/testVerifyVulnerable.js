/*
 This script tests the putCookie and removeCookie methods of the MemoryCookieStore class. 
 It verifies if cookies can be successfully added and removed from the store, and checks 
 if the store behaves as expected after these operations.
*/

const { MemoryCookieStore } = require('./memstore');

// Create a new MemoryCookieStore instance
const cookieStore = new MemoryCookieStore();

// Object.create(null) is a method in JavaScript that allows you to create an object with no prototype. This means that the resulting object has no properties or methods inherited from.

// Test if idx is an object created with no prototype
console.log('Testing MemoryCookieStore.idx...');
if (Object.getPrototypeOf(cookieStore.idx) === null) {
  //This message indicates that the idx property of MemoryCookieStore is indeed an object created with no prototype, which confirms that your fix was applied correctly.
  console.log('MemoryCookieStore.idx is an object created with no prototype.');
} else {
  console.error('MemoryCookieStore.idx is not an object created with no prototype.');
}


// Test putCookie method
console.log('\nTesting putCookie method...');
cookieStore.putCookie({ domain: 'example.com', path: '/', key: 'test', value: '123' }, (err) => {
  if (err) {
    console.error('Error putting cookie:', err);
  } else {
    console.log('Cookie put successfully.');
    // Check if the cookie was added to the store
    cookieStore.findCookie('example.com', '/', 'test', (err, cookie) => {
      if (err) {
        console.error('Error finding cookie:', err);
      } else {
        if (cookie) {
          console.log('Cookie found:', cookie);
        } else {
          console.error('Cookie not found.');
        }
      }
    });
  }
});

// Test removeCookie method
console.log('\nTesting removeCookie method...');
cookieStore.removeCookie('example.com', '/', 'test', (err) => {
  if (err) {
    console.error('Error removing cookie:', err);
  } else {
    console.log('Cookie removed successfully.');
    // Check if the cookie was removed from the store
    cookieStore.findCookie('example.com', '/', 'test', (err, cookie) => {
      if (err) {
        console.error('Error finding cookie:', err);
      } else {
        if (!cookie) {
          console.log('Cookie not found, as expected.');
        } else {
          console.error('Cookie still found after removal.');
        }
      }
    });
  }
});
